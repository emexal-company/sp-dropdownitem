{"version":3,"file":"dropdownitem.component.js","sourceRoot":"","sources":["../src/dropdownitem.component.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AACtD,OAAO,EAAE,IAAI,EAAE,MAAM,mBAAmB,CAAC;AACzC,OAAO,kBAAkB,MAAM,uBAAuB,CAAC;AACvD,OAAO,EAAE,eAAe,EAAE,iBAAiB,EAAE,MAAM,yBAAyB,CAAC;AAC7E,mDAAmD;AAGnD,IAAa,YAAY,GAAzB,MAAa,YAAa,SAAQ,IAAI;IAAtC;;QAGuC,SAAI,GAAW,EAAE,CAAC;QAClB,SAAI,GAAW,EAAE,CAAC;QAClB,OAAE,GAAW,EAAE,CAAC;QACf,cAAS,GAAY,KAAK,CAAC;QAC3B,aAAQ,GAAY,KAAK,CAAC;QAC1B,aAAQ,GAAY,KAAK,CAAC;QAC1B,eAAU,GAAY,KAAK,CAAC;IA4BpE,CAAC;IA1Ba,YAAY;IAEtB,CAAC;IAES,WAAW,CAAC,CAAM;QACxB,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC/B,IAAI,YAAY,GAAG,IAAI,WAAW,CAAC,aAAa,EAAE;YAC9C,MAAM,EAAE;gBACJ,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,QAAQ,EAAE,IAAI,CAAC,QAAQ;aAC1B;YACD,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,IAAI;SACjB,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;IACrC,CAAC;IAES,mBAAmB,CAAC,CAAM,IAAI,CAAC;IAE/B,MAAM;QACZ,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,OAAO,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACvC;aAAM;YACH,OAAO,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACrC;IACL,CAAC;CACJ,CAAA;AApCiB,4BAAe,GAAG,CAAC,kBAAkB,CAAC,CAAC;AAEzB;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;0CAA0B;AACzB;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;0CAA0B;AACzB;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;wCAAwB;AACtB;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;+CAAmC;AAClC;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;8CAAkC;AACjC;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;8CAAkC;AACjC;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;gDAAoC;AATvD,YAAY;IADxB,aAAa,CAAC,iBAAiB,CAAC;GACpB,YAAY,CAqCxB;SArCY,YAAY","sourcesContent":["import { customElement, property } from 'lit-element';\r\nimport { Base } from '@spectrum/sp-base';\r\nimport dropdownitemStyles from './dropdownitem.styles';\r\nimport { elementTemplate, separatorTemplate } from './dropdownitem.template';\r\n//import { Dropdown } from '@spectrum/sp-dropdown';\r\n\r\n@customElement('sp-dropdownitem')\r\nexport class DropdownItem extends Base {\r\n    public static componentStyles = [dropdownitemStyles];\r\n\r\n    @property({ type: String }) public role: string = '';\r\n    @property({ type: String }) public text: string = '';\r\n    @property({ type: String }) public id: string = '';\r\n    @property({ type: Boolean }) public separator: boolean = false;\r\n    @property({ type: Boolean }) public selected: boolean = false;\r\n    @property({ type: Boolean }) public disabled: boolean = false;\r\n    @property({ type: Boolean }) public thumbnails: boolean = false;\r\n\r\n    protected firstUpdated() {\r\n\r\n    }\r\n\r\n    protected handleClick(e: any) {\r\n        this.selected = !this.selected;\r\n        let changedEvent = new CustomEvent('dropchanged', {\r\n            detail: {\r\n                text: this.text,\r\n                selected: this.selected\r\n            },\r\n            bubbles: true,\r\n            composed: true\r\n        });\r\n        this.dispatchEvent(changedEvent);\r\n    }\r\n\r\n    protected handleDisabledClick(e: any) { }\r\n\r\n    protected render() {\r\n        if (this.separator) {\r\n            return separatorTemplate.call(this);\r\n        } else {\r\n            return elementTemplate.call(this);\r\n        }\r\n    }\r\n}\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n        'sp-dropdownitem': DropdownItem;\r\n    }\r\n}\r\n"]}